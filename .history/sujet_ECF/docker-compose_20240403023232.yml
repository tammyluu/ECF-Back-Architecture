version: '3' 

services:
 
  # Database
  bdd:
    container_name: bdd
    image: mysql
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    ports:
      - "3307:${AUTHENTICATION_SERVICE_PORT}"
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    networks:
      - ecf
  #Server
  # Authentication service
  authentication-service:
    container_name: authen
    build: 
      context: ./server/authentication-service
      dockerfile: dockerfile
    ports:
      - "7001:${AUTHENTICATION_SERVICE_PORT}"  
    environment:
      PORT: ${AUTHENTICATION_SERVICE_PORT}
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}
      DB_HOST: bdd
      DB_PORT: ${DB_PORT}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    networks:
      - ecf

  # Common data service 
  common-data-service:
    build: 
      context: ./server/common-data-service
      dockerfile: dockerfile
    ports:
      - "9001:${COMMON_DATA_SERVICE_PORT}"
     environment:
      REDIS_PORT: ${REDIS_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      PORT: ${COMMON_DATA_SERVICE_PORT}
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}
      DB_HOST: bdd
      DB_PORT: ${DB_PORT}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    networks:
      - ecf

  # Payment service 
  payment-service:
    build: 
      context: ./server/payment-service
      dockerfile: dockerfile
    ports:
      - "9051:${PAYMENT_SERVICE_PORT}"
    environment:
      PORT: ${PAYMENT_SERVICE_PORT}
      DB_PORT: ${DB_PORT}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    networks:
      - ecf

  # searche
  search-suggestion-service:
    container_name: search-suggestion-service
    build:
      context: ./server/search-suggestion-service
      dockerfile: Dockerfile
    ports:
      - ${SEARCH_SUGGESTION_SERVICE_PORT}:${SEARCH_SUGGESTION_SERVICE_PORT}
    environment:
      PORT: ${SEARCH_SUGGESTION_SERVICE_PORT}
      DB_PORT: ${DB_PORT}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    networks:
      - backend-network    

   # Client
  front-react:
    build:
      #container_name: front
      context: ./client
      dockerfile: dockerfile
    
    ports:
      - 80:80
    depends_on:
      - authentication-service
    networks:
      - ecf

networks:
  ecf:
    driver: bridge

volumes:
  db_data:    

 
